-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.agendamentos
(
    id serial NOT NULL,
    nome character varying(200) COLLATE pg_catalog."default" NOT NULL,
    endereco character varying(200) COLLATE pg_catalog."default" NOT NULL,
    numero character varying(20) COLLATE pg_catalog."default" NOT NULL,
    setor character varying(100) COLLATE pg_catalog."default" NOT NULL,
    cep character varying(9) COLLATE pg_catalog."default" NOT NULL,
    telefone character varying(50) COLLATE pg_catalog."default" NOT NULL,
    datavisita text COLLATE pg_catalog."default",
    id_turno integer NOT NULL,
    id_user integer,
    created timestamp without time zone NOT NULL,
    modified timestamp without time zone NOT NULL,
    CONSTRAINT agendamentos_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.turnos
(
    id serial NOT NULL,
    descricao character varying(50) COLLATE pg_catalog."default" NOT NULL,
    created timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    modified timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT turnos_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.users
(
    id serial NOT NULL,
    username character varying(255) COLLATE pg_catalog."default" NOT NULL,
    email character varying(255) COLLATE pg_catalog."default" NOT NULL,
    password character varying(100) COLLATE pg_catalog."default" NOT NULL,
    role character varying(100) COLLATE pg_catalog."default" DEFAULT NULL::character varying,
    created timestamp without time zone NOT NULL,
    modified timestamp without time zone NOT NULL,
    CONSTRAINT users_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.retiradas
(
    id serial NOT NULL,
    qtde integer NOT NULL,
    id_users integer NOT NULL,
    id_lotes integer NOT NULL,
    id_pacientes integer NOT NULL,
    created timestamp without time zone,
    modified timestamp without time zone,
    CONSTRAINT retiradas_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.lotes
(
    id serial NOT NULL,
    numero character varying(50) COLLATE pg_catalog."default" NOT NULL,
    datavencimento timestamp without time zone NOT NULL,
    datafabricacao timestamp without time zone NOT NULL,
    qdte integer NOT NULL,
    id_medicamento integer NOT NULL,
    id_forma_farmaceutica integer NOT NULL,
    id_tipo_medicamento integer NOT NULL,
    created timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    modified timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT lotes_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.formas_farmaceuticas
(
    id serial NOT NULL,
    descricao character varying(200) COLLATE pg_catalog."default" NOT NULL,
    created timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    modified timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT formas_farmaceuticas_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.medicamentos
(
    id serial NOT NULL,
    descricao character varying(300) COLLATE pg_catalog."default" NOT NULL,
    principioativo character varying(300) COLLATE pg_catalog."default" NOT NULL,
    created timestamp without time zone NOT NULL,
    modified timestamp without time zone NOT NULL,
    CONSTRAINT medicamentos_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.tipos_medicamentos
(
    id serial NOT NULL,
    descricao character varying(200) COLLATE pg_catalog."default" NOT NULL,
    created timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    modified timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT tipos_medicamentos_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.pacientes
(
    id serial NOT NULL,
    nome character varying(200) COLLATE pg_catalog."default" NOT NULL,
    cpf character varying(14) COLLATE pg_catalog."default" NOT NULL,
    datanascimento timestamp without time zone NOT NULL,
    telefone character varying(20) COLLATE pg_catalog."default" NOT NULL,
    cartaosus integer NOT NULL,
    created timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    modified timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT pacientes_pkey PRIMARY KEY (id)
);

ALTER TABLE IF EXISTS public.agendamentos
    ADD CONSTRAINT agendamentos_id_turno_fkey FOREIGN KEY (id_turno)
    REFERENCES public.turnos (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS idx_turno_id
    ON public.agendamentos(id_turno);


ALTER TABLE IF EXISTS public.agendamentos
    ADD CONSTRAINT fk_agendamentos_turnos FOREIGN KEY (id_turno)
    REFERENCES public.turnos (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS idx_turno_id
    ON public.agendamentos(id_turno);


ALTER TABLE IF EXISTS public.agendamentos
    ADD CONSTRAINT fk_agendamentos_users FOREIGN KEY (id_user)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS idx_users_id
    ON public.agendamentos(id_user);


ALTER TABLE IF EXISTS public.retiradas
    ADD CONSTRAINT fk_retiradas_lotes FOREIGN KEY (id_lotes)
    REFERENCES public.lotes (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS idx_retiradas_lotes_id
    ON public.retiradas(id_lotes);


ALTER TABLE IF EXISTS public.retiradas
    ADD CONSTRAINT fk_retiradas_pacientes FOREIGN KEY (id_pacientes)
    REFERENCES public.pacientes (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS idx_retiradas_pacientes_id
    ON public.retiradas(id_pacientes);


ALTER TABLE IF EXISTS public.retiradas
    ADD CONSTRAINT fk_retiradas_users FOREIGN KEY (id_users)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS idx_retiradas_users_id
    ON public.retiradas(id_users);


ALTER TABLE IF EXISTS public.lotes
    ADD CONSTRAINT fk_lotes_forma_farmaceutica FOREIGN KEY (id_forma_farmaceutica)
    REFERENCES public.formas_farmaceuticas (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS idx_lotes_forma_farmaceutica_id
    ON public.lotes(id_forma_farmaceutica);


ALTER TABLE IF EXISTS public.lotes
    ADD CONSTRAINT fk_lotes_medicamento FOREIGN KEY (id_medicamento)
    REFERENCES public.medicamentos (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS idx_lotes_medicamento_id
    ON public.lotes(id_medicamento);


ALTER TABLE IF EXISTS public.lotes
    ADD CONSTRAINT fk_lotes_tipo_medicamento FOREIGN KEY (id_tipo_medicamento)
    REFERENCES public.tipos_medicamentos (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS idx_lotes_tipo_medicamento_id
    ON public.lotes(id_tipo_medicamento);

END;